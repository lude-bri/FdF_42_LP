!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/lude-bri/CC/Rank2/FdF/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(BUILD_PATH)	Makefile	/^$(BUILD_PATH):$/;"	t
$(BUILD_PATH)	lib/libft/Makefile	/^$(BUILD_PATH):$/;"	t
$(BUILD_PATH)/%.o	Makefile	/^$(BUILD_PATH)\/%.o: $(SRC_PATH)\/%.c$/;"	t
$(BUILD_PATH)/%.o	lib/libft/Makefile	/^$(BUILD_PATH)\/%.o: $(LIBFT_PATH)\/%.c$/;"	t
$(LIBFT_ARC)	Makefile	/^$(LIBFT_ARC):$/;"	t
$(MLX_ARC)	Makefile	/^$(MLX_ARC):$/;"	t
$(NAME)	Makefile	/^$(NAME): $(LIBFT_ARC) $(MLX_ARC) $(BUILD_PATH) $(OBJS) ## Compile Mandatory version$/;"	t
$(NAME)	lib/libft/Makefile	/^$(NAME): $(BUILD_PATH) $(OBJS)$/;"	t
$(NAME)	lib/libft/libft_42/Makefile	/^$(NAME): $(OBJS)$/;"	t
$(NAME)	lib/mlx/Makefile.mk	/^$(NAME)	: $(OBJ)$/;"	t
$(NAME)	lib/mlx/test/Makefile.mk	/^$(NAME): $(OBJ)$/;"	t
$(OBJ_DIR)/%.o	lib/mlx/Makefile.mk	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
$(TEMP_PATH)	Makefile	/^$(TEMP_PATH):$/;"	t
------------------------------------------------------------------	lib/libft/README.md	/^------------------------------------------------------------------$/;"	s
1.2. Static library and Dynamic library	lib/libft/README.md	/^## 1.2. Static library and Dynamic library$/;"	s	chapter:<a name="#index-1">1. Libraries</a>
2.2. Types of Preprocessors Directives	lib/libft/README.md	/^## 2.2. Types of Preprocessors Directives$/;"	s	chapter:<a name="#index-2"> 2. Preprocessors </a>
2.2.1. Macros	lib/libft/README.md	/^### 2.2.1. Macros$/;"	S	section:<a name="#index-2"> 2. Preprocessors </a>""2.2. Types of Preprocessors Directives
2.2.2. File Inclusion	lib/libft/README.md	/^### 2.2.2. File Inclusion$/;"	S	section:<a name="#index-2"> 2. Preprocessors </a>""2.2. Types of Preprocessors Directives
2.2.3. Conditional Compilation	lib/libft/README.md	/^### 2.2.3. Conditional Compilation$/;"	S	section:<a name="#index-2"> 2. Preprocessors </a>""2.2. Types of Preprocessors Directives
2.3. About Libraries... again	lib/libft/README.md	/^## 2.3. About Libraries... again$/;"	s	chapter:<a name="#index-2"> 2. Preprocessors </a>
<a name="#index-0">Index</a>	lib/libft/README.md	/^## <a name="#index-0">Index<\/a>$/;"	s
<a name="#index-1">1. Libraries</a>	lib/libft/README.md	/^# <a name="#index-1">1. Libraries<\/a>$/;"	c
<a name="#index-1.1">1.1. How Libraries works: Linker </a>	lib/libft/README.md	/^## <a name="#index-1.1">1.1. How Libraries works: Linker <\/a>$/;"	s	chapter:<a name="#index-1">1. Libraries</a>
<a name="#index-2"> 2. Preprocessors </a>	lib/libft/README.md	/^# <a name="#index-2"> 2. Preprocessors <\/a>$/;"	c
<a name="#index-2-1"> 2.1. Preprocessor Directives in C </a>	lib/libft/README.md	/^## <a name="#index-2-1"> 2.1. Preprocessor Directives in C <\/a>$/;"	s	chapter:<a name="#index-2"> 2. Preprocessors </a>
<a name="#index-3"> 3. Building our first C Library </a>	lib/libft/README.md	/^# <a name="#index-3"> 3. Building our first C Library <\/a>$/;"	c
<a name="#index-3-1"> 3.1. The Preprocessor Directives for Libft </a>	lib/libft/README.md	/^## <a name="#index-3-1"> 3.1. The Preprocessor Directives for Libft <\/a>$/;"	s	chapter:<a name="#index-3"> 3. Building our first C Library </a>
<a name="#index-3-2"> 3.2. The Functions </a>	lib/libft/README.md	/^## <a name="#index-3-2"> 3.2. The Functions <\/a>$/;"	s	chapter:<a name="#index-3"> 3. Building our first C Library </a>
<a name="#index-4"> 4. Makefile </a>	lib/libft/README.md	/^# <a name="#index-4"> 4. Makefile <\/a>$/;"	c
<a name="#index-4-1"> 4.1. What is Makefile? </a>	lib/libft/README.md	/^## <a name="#index-4-1"> 4.1. What is Makefile? <\/a>$/;"	s	chapter:<a name="#index-4"> 4. Makefile </a>
<a name="#index-4-2"> 4.2. Why do we need Makefile? </a>	lib/libft/README.md	/^## <a name="#index-4-2"> 4.2. Why do we need Makefile? <\/a>$/;"	s	chapter:<a name="#index-4"> 4. Makefile </a>
<a name="#index-4-3"> 4.3. How to Makefile? </a>	lib/libft/README.md	/^## <a name="#index-4-3"> 4.3. How to Makefile? <\/a>$/;"	s	chapter:<a name="#index-4"> 4. Makefile </a>
<a name="#index-5"> Conclusion </a>	lib/libft/README.md	/^# <a name="#index-5"> Conclusion <\/a>$/;"	c
AR	Makefile	/^AR		= ar rcs$/;"	m
AR	lib/libft/Makefile	/^AR 			= ar rcs$/;"	m
AUTHOR	lib/mlx/man/man1/mlx.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man1/mlx_loop.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man1/mlx_new_image.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man1/mlx_new_window.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man1/mlx_pixel_put.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man3/mlx.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man3/mlx_loop.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man3/mlx_new_image.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man3/mlx_new_window.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	lib/mlx/man/man3/mlx_pixel_put.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
About	lib/libft/README.md	/^## About$/;"	s
B	Makefile	/^B  		= $(shell tput bold)$/;"	m
B	lib/libft/Makefile	/^B  		= $(shell tput bold)$/;"	m
BBLU	Makefile	/^BBLU	= $(shell tput setaf 12)$/;"	m
BBLU	lib/libft/Makefile	/^BBLU	= $(shell tput setaf 12)$/;"	m
BCYA	Makefile	/^BCYA	= $(shell tput setaf 14)$/;"	m
BCYA	lib/libft/Makefile	/^BCYA	= $(shell tput setaf 14)$/;"	m
BEL	lib/libft/Makefile	/^BEL 	= $(shell tput bel)$/;"	m
BGRN	Makefile	/^BGRN	= $(shell tput setaf 10)$/;"	m
BGRN	lib/libft/Makefile	/^BGRN	= $(shell tput setaf 10)$/;"	m
BLA	Makefile	/^BLA		= $(shell tput setaf 0)$/;"	m
BLA	lib/libft/Makefile	/^BLA		= $(shell tput setaf 0)$/;"	m
BLU	Makefile	/^BLU		= $(shell tput setaf 4)$/;"	m
BLU	lib/libft/Makefile	/^BLU		= $(shell tput setaf 4)$/;"	m
BMAG	Makefile	/^BMAG	= $(shell tput setaf 13)$/;"	m
BMAG	lib/libft/Makefile	/^BMAG	= $(shell tput setaf 13)$/;"	m
BONUS	lib/libft/Makefile	/^BONUS = $(addprefix $(LIBFT_PATH)\/, ft_lstnew.c ft_lstadd_front.c ft_lstsize.c \\$/;"	m
BONUS	lib/libft/libft_42/Makefile	/^BONUS = $(BONUS_FILES:.c=.o) $(OBJS)$/;"	m
BONUS_FILES	lib/libft/libft_42/Makefile	/^BONUS_FILES = ft_lstnew.c ft_lstadd_front.c ft_lstsize.c ft_lstlast.c \\$/;"	m
BONUS_OBJS	lib/libft/Makefile	/^BONUS_OBJS	= $(addprefix $(BUILD_PATH)\/, $(notdir $(BONUS:.c=.o)))$/;"	m
BONUS_PATH	Makefile	/^BONUS_PATH		= bonus$/;"	m
BRED	Makefile	/^BRED 	= $(shell tput setaf 9)$/;"	m
BRED	lib/libft/Makefile	/^BRED 	= $(shell tput setaf 9)$/;"	m
BUFFER_SIZE	lib/libft/libft_42/libft.h	/^#  define BUFFER_SIZE /;"	d
BUILD_PATH	Makefile	/^BUILD_PATH		= .build$/;"	m
BUILD_PATH	lib/libft/Makefile	/^BUILD_PATH	= .build$/;"	m
BWHI	Makefile	/^BWHI	= $(shell tput setaf 15)$/;"	m
BWHI	lib/libft/Makefile	/^BWHI	= $(shell tput setaf 15)$/;"	m
BYEL	Makefile	/^BYEL	= $(shell tput setaf 11)$/;"	m
BYEL	lib/libft/Makefile	/^BYEL	= $(shell tput setaf 11)$/;"	m
CC	Makefile	/^CC			= gcc$/;"	m
CC	lib/libft/Makefile	/^CC 			= cc$/;"	m
CC	lib/libft/libft_42/Makefile	/^CC = cc $/;"	m
CC	lib/mlx/Makefile.mk	/^	CC = clang$/;"	m
CC	lib/mlx/Makefile.mk	/^CC	= gcc$/;"	m
CC	lib/mlx/test/Makefile.mk	/^	CC	= gcc$/;"	m
CC	lib/mlx/test/Makefile.mk	/^	CC = clang$/;"	m
CFLAGS	Makefile	/^CFLAGS		= -Wall -Wextra -Werror$/;"	m
CFLAGS	lib/libft/Makefile	/^CFLAGS		= -Wall -Wextra -Werror$/;"	m
CFLAGS	lib/libft/libft_42/Makefile	/^CFLAGS = -Wall -Wextra -Werror $/;"	m
CFLAGS	lib/mlx/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	lib/mlx/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I.. -g$/;"	m
CLR	lib/libft/Makefile	/^CLR 	= $(shell tput el 1)$/;"	m
COLOR	lib/mlx/man/man1/mlx_pixel_put.1	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
COLOR	lib/mlx/man/man3/mlx_pixel_put.3	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
CYA	Makefile	/^CYA		= $(shell tput setaf 6)$/;"	m
CYA	lib/libft/Makefile	/^CYA		= $(shell tput setaf 6)$/;"	m
D	lib/libft/Makefile	/^D 		= $(shell tput sgr0)$/;"	m
DESCRIPTION	lib/mlx/man/man1/mlx.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man1/mlx_loop.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man1/mlx_new_image.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man1/mlx_new_window.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man1/mlx_pixel_put.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man3/mlx.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man3/mlx_loop.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man3/mlx_new_image.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man3/mlx_new_window.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	lib/mlx/man/man3/mlx_pixel_put.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DFLAGS	Makefile	/^DFLAGS		= -g -fsanitize=address$/;"	m
Develop	README.md	/^## Develop$/;"	s	chapter:FdF_42_LP
ENV_DISPLAY	lib/mlx/mlx_int.h	/^# define ENV_DISPLAY /;"	d
EOF	lib/mlx/configure	/^cat <<EOF$/;"	h
ERR_NO_TRUECOLOR	lib/mlx/mlx_int.h	/^# define ERR_NO_TRUECOLOR /;"	d
EXTRA	lib/libft/Makefile	/^EXTRA = $(addprefix $(LIBFT_PATH)\/, ft_putendl_fd.c ft_putnchar_fd.c \\$/;"	m
EXTRA_OBJS	lib/libft/Makefile	/^EXTRA_OBJS	= $(addprefix $(BUILD_PATH)\/, $(notdir $(EXTRA:.c=.o)))$/;"	m
FDF_H	inc/fdf.h	/^# define FDF_H$/;"	d
FILES	Makefile	/^FILES = main.c$/;"	m
FdF	README.md	/^## FdF$/;"	s	chapter:FdF_42_LP
FdF_42_LP	README.md	/^# FdF_42_LP$/;"	c
Flowchart	README.md	/^## Flowchart$/;"	s	chapter:FdF_42_LP
GOING	lib/mlx/man/man1/mlx_loop.1	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GOING	lib/mlx/man/man3/mlx_loop.3	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GRE	Makefile	/^GRE		= $(shell tput setaf 8)$/;"	m
GRE	lib/libft/Makefile	/^GRE		= $(shell tput setaf 8)$/;"	m
GRN	Makefile	/^GRN		= $(shell tput setaf 2)$/;"	m
GRN	lib/libft/Makefile	/^GRN		= $(shell tput setaf 2)$/;"	m
HEIGHT	inc/fdf.h	/^# define HEIGHT /;"	d
IM1_SX	lib/mlx/test/main.c	/^#define	IM1_SX	/;"	d	file:
IM1_SY	lib/mlx/test/main.c	/^#define	IM1_SY	/;"	d	file:
IM3_SX	lib/mlx/test/main.c	/^#define	IM3_SX	/;"	d	file:
IM3_SY	lib/mlx/test/main.c	/^#define	IM3_SY	/;"	d	file:
INC	Makefile	/^INC			= -I $(INCLUDE_PATH)$/;"	m
INC	lib/mlx/Makefile.mk	/^INC	=%%%%$/;"	m
INC	lib/mlx/test/Makefile.mk	/^INC=%%%%$/;"	m
INCLIB	lib/mlx/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
INCLUDE	lib/libft/Makefile	/^INCLUDE 	= -I.$/;"	m
INCLUDE	lib/mlx/man/man1/mlx.1	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCLUDE	lib/mlx/man/man3/mlx.3	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCLUDE_PATH	Makefile	/^INCLUDE_PATH	= inc$/;"	m
LFLAGS	lib/mlx/test/Makefile.mk	/^LFLAGS = -L.. -lmlx -L$(INCLIB) -lXext -lX11 -lm$/;"	m
LIBFT_ARC	Makefile	/^LIBFT_ARC	= $(LIBFT_PATH)\/libft.a$/;"	m
LIBFT_H	lib/libft/libft_42/libft.h	/^# define LIBFT_H$/;"	d
LIBFT_PATH	Makefile	/^LIBFT_PATH		= $(LIBS_PATH)\/libft$/;"	m
LIBFT_PATH	lib/libft/Makefile	/^LIBFT_PATH = .\/libft_42$/;"	m
LIBRARY	lib/mlx/man/man1/mlx.1	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIBRARY	lib/mlx/man/man3/mlx.3	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIBS_PATH	Makefile	/^LIBS_PATH		= lib$/;"	m
LINKING	lib/mlx/man/man1/mlx.1	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LINKING	lib/mlx/man/man3/mlx.3	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LOCALHOST	lib/mlx/mlx_int.h	/^# define LOCALHOST /;"	d
License	lib/libft/README.md	/^### License$/;"	S	section:Usage""Setup & Compilation
MAG	Makefile	/^MAG		= $(shell tput setaf 5)$/;"	m
MAG	lib/libft/Makefile	/^MAG		= $(shell tput setaf 5)$/;"	m
MAKE	Makefile	/^MAKE	= make -C$/;"	m
MAKE	lib/libft/Makefile	/^MAKE		= make -C$/;"	m
MKDIR_P	Makefile	/^MKDIR_P	= mkdir -p$/;"	m
MKDIR_P	lib/libft/Makefile	/^MKDIR_P		= mkdir -p$/;"	m
MLX_ARC	Makefile	/^MLX_ARC		= $(MLX_PATH)\/libmlx.a$/;"	m
MLX_H	lib/mlx/mlx.h	/^#define	MLX_H$/;"	d
MLX_INT_H	lib/mlx/mlx_int.h	/^# define MLX_INT_H$/;"	d
MLX_MAX_EVENT	lib/mlx/mlx_int.h	/^# define MLX_MAX_EVENT /;"	d
MLX_PATH	Makefile	/^MLX_PATH		= $(LIBS_PATH)\/mlx$/;"	m
MLX_TYPE_SHM	lib/mlx/mlx_int.h	/^# define MLX_TYPE_SHM /;"	d
MLX_TYPE_SHM_PIXMAP	lib/mlx/mlx_int.h	/^# define MLX_TYPE_SHM_PIXMAP /;"	d
MLX_TYPE_XIMAGE	lib/mlx/mlx_int.h	/^# define MLX_TYPE_XIMAGE /;"	d
MiniLibX	lib/mlx/man/man1/mlx.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man1/mlx_loop.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man1/mlx_new_image.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man1/mlx_new_window.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man1/mlx_pixel_put.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man3/mlx.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man3/mlx_loop.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man3/mlx_new_image.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man3/mlx_new_window.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	lib/mlx/man/man3/mlx_pixel_put.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
NAME	Makefile	/^NAME 			= fdf$/;"	m
NAME	lib/libft/Makefile	/^NAME =	libft.a$/;"	m
NAME	lib/libft/libft_42/Makefile	/^NAME = libft.a $/;"	m
NAME	lib/mlx/Makefile.mk	/^NAME		= libmlx.a$/;"	m
NAME	lib/mlx/man/man1/mlx.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man1/mlx_loop.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man1/mlx_new_image.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man1/mlx_new_window.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man1/mlx_pixel_put.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man3/mlx.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man3/mlx_loop.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man3/mlx_new_image.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man3/mlx_new_window.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/man/man3/mlx_pixel_put.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	lib/mlx/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME_UNAME	lib/mlx/Makefile.mk	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
N_KO	Makefile	/^N_KO		= 0$/;"	m
N_OK	Makefile	/^N_OK		= 0$/;"	m
OBJ	lib/mlx/Makefile.mk	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	lib/mlx/test/Makefile.mk	/^OBJ = $(SRC:%.c=%.o)$/;"	m
OBJS	Makefile	/^OBJS	= $(SRC:$(SRC_PATH)\/%.c=$(BUILD_PATH)\/%.o)$/;"	m
OBJS	lib/libft/Makefile	/^OBJS		= $(addprefix $(BUILD_PATH)\/, $(notdir $(SRC:.c=.o)))$/;"	m
OBJS	lib/libft/libft_42/Makefile	/^OBJS = $(SRCS_FILES:.c=.o)$/;"	m
OBJ_DIR	lib/mlx/Makefile.mk	/^OBJ_DIR = obj$/;"	m
PI	inc/fdf.h	/^# define PI /;"	d
RED	Makefile	/^RED		= $(shell tput setaf 1)$/;"	m
RED	lib/libft/Makefile	/^RED		= $(shell tput setaf 1)$/;"	m
RETURN	lib/mlx/man/man1/mlx.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	lib/mlx/man/man1/mlx_new_image.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	lib/mlx/man/man1/mlx_new_window.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	lib/mlx/man/man3/mlx.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	lib/mlx/man/man3/mlx_new_image.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	lib/mlx/man/man3/mlx_new_window.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	lib/mlx/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RM	Makefile	/^RM		= rm -rf$/;"	m
RM	lib/libft/Makefile	/^RM 			= rm -rf$/;"	m
RM	lib/libft/libft_42/Makefile	/^RM = rm -rf $/;"	m
SEE	lib/mlx/man/man1/mlx.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man1/mlx_loop.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man1/mlx_new_image.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man1/mlx_new_window.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man1/mlx_pixel_put.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man3/mlx.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man3/mlx_loop.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man3/mlx_new_image.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man3/mlx_new_window.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	lib/mlx/man/man3/mlx_pixel_put.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SHELL	Makefile	/^SHELL	:= bash$/;"	m
SRC	Makefile	/^SRC		= $(addprefix $(SRC_PATH)\/, $(FILES))$/;"	m
SRC	lib/libft/Makefile	/^SRC =	$(addprefix $(LIBFT_PATH)\/, ft_isalpha.c ft_isdigit.c ft_isalnum.c \\$/;"	m
SRC	lib/mlx/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	lib/mlx/test/Makefile.mk	/^SRC = main.c$/;"	m
SRCS_FILES	lib/libft/libft_42/Makefile	/^SRCS_FILES = ft_isalpha.c ft_strlen.c ft_memset.c ft_bzero.c ft_memcpy.c \\$/;"	m
SRC_PATH	Makefile	/^SRC_PATH		= src$/;"	m
STORING	lib/mlx/man/man1/mlx_new_image.1	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
STORING	lib/mlx/man/man3/mlx_new_image.3	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man1/mlx.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man1/mlx_loop.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man1/mlx_new_image.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man1/mlx_new_window.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man1/mlx_pixel_put.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man3/mlx.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man3/mlx_loop.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man3/mlx_new_image.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man3/mlx_new_window.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	lib/mlx/man/man3/mlx_pixel_put.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
Setup & Compilation	lib/libft/README.md	/^## Setup & Compilation$/;"	s	chapter:Usage
TEMP_PATH	Makefile	/^TEMP_PATH		= .temp$/;"	m
TESTS_PATH	Makefile	/^TESTS_PATH		= files$/;"	m
UNAME	Makefile	/^UNAME 			= $(shell uname)$/;"	m
UNAME	lib/mlx/Makefile.mk	/^UNAME = $(shell uname)$/;"	m
UNAME	lib/mlx/test/Makefile.mk	/^UNAME := $(shell uname)$/;"	m
Usage	lib/libft/README.md	/^# Usage$/;"	c
WARN_SHM_ATTACH	lib/mlx/mlx_int.h	/^# define WARN_SHM_ATTACH /;"	d
WHI	Makefile	/^WHI		= $(shell tput setaf 7)$/;"	m
WHI	lib/libft/Makefile	/^WHI		= $(shell tput setaf 7)$/;"	m
WIDTH	inc/fdf.h	/^# define WIDTH /;"	d
WIN1_SX	lib/mlx/test/main.c	/^#define	WIN1_SX	/;"	d	file:
WIN1_SY	lib/mlx/test/main.c	/^#define	WIN1_SY	/;"	d	file:
X-WINDOW	lib/mlx/man/man1/mlx.1	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	lib/mlx/man/man1/mlx_loop.1	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
X-WINDOW	lib/mlx/man/man3/mlx.3	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	lib/mlx/man/man3/mlx_loop.3	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
XPM	lib/mlx/man/man1/mlx_new_image.1	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
XPM	lib/mlx/man/man3/mlx_new_image.3	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
X_ShmAttach	lib/mlx/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
YEL	Makefile	/^YEL		= $(shell tput setaf 3)$/;"	m
YEL	lib/libft/Makefile	/^YEL		= $(shell tput setaf 3)$/;"	m
_INFO	Makefile	/^_INFO 			= [$(BLU)INFO$(D)]$/;"	m
_INFO	lib/libft/Makefile	/^_INFO 			= [$(BLU)INFO$(D)]$/;"	m
_LIBFT	Makefile	/^_LIBFT	 		= [$(MAG)libft$(D)]$/;"	m
_MLX	Makefile	/^_MLX	 		= [$(MAG)mlx$(D)]$/;"	m
_NAME	Makefile	/^_NAME	 		= [$(MAG)FdF$(D)]$/;"	m
_NAME	lib/libft/Makefile	/^_NAME	 		= [$(MAG)libft$(D)]$/;"	m
_NORM	Makefile	/^_NORM 			= [$(MAG)Norminette$(D)]$/;"	m
_NORM	lib/libft/Makefile	/^_NORM 			= [$(YEL)Norminette$(D)]$/;"	m
_NORM_ERR	Makefile	/^_NORM_ERR 		= $(RED)=== KO:$(D)$/;"	m
_NORM_INFO	Makefile	/^_NORM_INFO 		= $(BLU)File no:$(D)$/;"	m
_NORM_INFO	lib/libft/Makefile	/^_NORM_INFO 		= $(BLU)File no:$(D)$/;"	m
_NORM_SUCCESS	Makefile	/^_NORM_SUCCESS 	= $(GRN)=== OK:$(D)$/;"	m
_NORM_SUCCESS	lib/libft/Makefile	/^_NORM_SUCCESS 	= $(GRN)=== OK:$(D)$/;"	m
_SEP	Makefile	/^_SEP 			= =====================$/;"	m
_SUCCESS	Makefile	/^_SUCCESS 		= [$(GRN)SUCCESS$(D)]$/;"	m
_SUCCESS	lib/libft/Makefile	/^_SUCCESS 		= [$(GRN)SUCCESS$(D)]$/;"	m
addr	inc/fdf.h	/^	char	*addr; \/\/image address$/;"	m	struct:s_img	typeref:typename:char *
all	Makefile	/^all: deps $(BUILD_PATH) $(NAME) ## Compile Mandatory version$/;"	t
all	lib/libft/Makefile	/^all: $(NAME)	## Compile Basic libft$/;"	t
all	lib/libft/libft_42/Makefile	/^all: $(NAME)$/;"	t
all	lib/mlx/Makefile	/^all	: do_configure$/;"	t
all	lib/mlx/Makefile.mk	/^all	: $(NAME)$/;"	t
all	lib/mlx/test/Makefile.mk	/^all: $(NAME)$/;"	t
apply_color_grading	src/color.c	/^void	apply_color_grading(t_map *map, t_z *z)$/;"	f	typeref:typename:void
arrow_keys	src/hooks.c	/^int	arrow_keys(int Key, t_mlx *mlx)$/;"	f	typeref:typename:int
at_exit	lib/mlx/test/run_tests.sh	/^at_exit() {$/;"	f
bonus	lib/libft/Makefile	/^bonus: $(BUILD_PATH) $(OBJS) $(BONUS_OBJS)	## Compile libft with bonus$/;"	t
bonus	lib/libft/libft_42/Makefile	/^bonus: $(BONUS)$/;"	t
bpp	inc/fdf.h	/^	int		bpp; \/\/bits per pixel$/;"	m	struct:s_img	typeref:typename:int
bpp	lib/mlx/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp1	lib/mlx/test/main.c	/^int	bpp1;$/;"	v	typeref:typename:int
bpp2	lib/mlx/test/main.c	/^int	bpp2;$/;"	v	typeref:typename:int
bpp3	lib/mlx/test/main.c	/^int	bpp3;$/;"	v	typeref:typename:int
bpp4	lib/mlx/test/main.c	/^int	bpp4;$/;"	v	typeref:typename:int
bresenham	src/render.c	/^void	bresenham(t_mlx *win, t_point p1, t_point p2)$/;"	f	typeref:typename:void
c_factor	inc/fdf.h	/^	float	c_factor;$/;"	m	struct:s_mlx	typeref:typename:float
c_index	inc/fdf.h	/^	int		c_index;$/;"	m	struct:s_mlx	typeref:typename:int
check	lib/mlx/Makefile.mk	/^check: all$/;"	t
check_color	inc/fdf.h	/^	bool	check_color;$/;"	m	struct:s_point	typeref:typename:bool
check_color_true	src/color.c	/^bool	check_color_true(t_map *map)$/;"	f	typeref:typename:bool
check_event	src/hooks.c	/^int	check_event(int Key, t_mlx *mlx)$/;"	f	typeref:typename:int
check_ext_func	Makefile	/^check_ext_func: all		## Check for external functions$/;"	t
clean	Makefile	/^clean: 				## Remove object files$/;"	t
clean	lib/libft/Makefile	/^clean:			## Clean libft binaries$/;"	t
clean	lib/libft/libft_42/Makefile	/^clean:$/;"	t
clean	lib/mlx/Makefile	/^clean	:$/;"	t
clean	lib/mlx/Makefile.mk	/^clean	:$/;"	t
clean	lib/mlx/configure	/^clean(){$/;"	f
clean	lib/mlx/test/Makefile.mk	/^clean:$/;"	t
clean_and_exit	src/free_and_exit.c	/^void	clean_and_exit(t_mlx *mlx)$/;"	f	typeref:typename:void
cmap	lib/mlx/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar	typeref:typename:Colormap
col	lib/mlx/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col	typeref:typename:int
color	inc/fdf.h	/^	int		color; \/\/color after ","$/;"	m	struct:s_point	typeref:typename:int
color	lib/mlx/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name	typeref:typename:int
color_map_1	lib/mlx/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f	typeref:typename:int
color_map_2	lib/mlx/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f	typeref:typename:int
colors_groups	src/color.c	/^static void	colors_groups(t_point *point)$/;"	f	typeref:typename:void	file:
content	lib/libft/libft_42/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
coord	inc/fdf.h	/^	t_point	**coord;$/;"	m	struct:s_map	typeref:typename:t_point **
copy_words	lib/libft/libft_42/ft_split.c	/^static char	*copy_words(const char *s, int a)$/;"	f	typeref:typename:char *	file:
count_letters	lib/libft/libft_42/ft_split.c	/^static int	count_letters(const char *s, char c)$/;"	f	typeref:typename:int	file:
count_words	lib/libft/libft_42/ft_split.c	/^static int	count_words(const char *s, char c)$/;"	f	typeref:typename:int	file:
count_words	src/parser.c	/^static int	count_words(char const *str, char c)$/;"	f	typeref:typename:int	file:
data	lib/mlx/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img	typeref:typename:char *
data1	lib/mlx/test/main.c	/^char	*data1;$/;"	v	typeref:typename:char *
data2	lib/mlx/test/main.c	/^char	*data2;$/;"	v	typeref:typename:char *
data3	lib/mlx/test/main.c	/^char	*data3;$/;"	v	typeref:typename:char *
data4	lib/mlx/test/main.c	/^char	*data4;$/;"	v	typeref:typename:char *
decrgb	lib/mlx/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar	typeref:typename:int[6]
deps	Makefile	/^deps:		## Download\/Update deps$/;"	t
depth	lib/mlx/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar	typeref:typename:int
display	lib/mlx/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar	typeref:typename:Display *
display_menu	src/display.c	/^void	display_menu(t_mlx *win)$/;"	f	typeref:typename:void
do_configure	lib/mlx/Makefile	/^do_configure	:$/;"	t
do_flush	lib/mlx/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar	typeref:typename:int
end_loop	lib/mlx/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar	typeref:typename:int
endian	inc/fdf.h	/^	int		endian; \/\/endian to adapt to the OS$/;"	m	struct:s_img	typeref:typename:int
endian1	lib/mlx/test/main.c	/^int	endian1;$/;"	v	typeref:typename:int
endian2	lib/mlx/test/main.c	/^int	endian2;$/;"	v	typeref:typename:int
endian3	lib/mlx/test/main.c	/^int	endian3;$/;"	v	typeref:typename:int
endian4	lib/mlx/test/main.c	/^int	endian4;$/;"	v	typeref:typename:int
error_clean	src/free_and_exit.c	/^void	error_clean(int fd, char *str)$/;"	f	typeref:typename:void
expose_hook	lib/mlx/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
expose_param	lib/mlx/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list	typeref:typename:void *
expose_win1	lib/mlx/test/main.c	/^int	expose_win1(void *p)$/;"	f	typeref:typename:int
expose_win2	lib/mlx/test/main.c	/^int	expose_win2(void *p)$/;"	f	typeref:typename:int
extra	lib/libft/Makefile	/^extra: $(BUILD_PATH) $(OBJS) $(BONUS_OBJS) $(EXTRA_OBJS) $(GNL_OBJS) $(PRINTF_OBJS) ## Compile l/;"	t
f_specifiers	lib/libft/libft_42/ft_printf.c	/^static int	f_specifiers(char str, va_list a)$/;"	f	typeref:typename:int	file:
fclean	Makefile	/^fclean: clean libclean			## Remove executable and .gdbinit$/;"	t
fclean	lib/libft/Makefile	/^fclean: clean	## Clean libft archive$/;"	t
fclean	lib/libft/libft_42/Makefile	/^fclean: clean$/;"	t
fcolor	inc/fdf.h	/^	int		fcolor;$/;"	m	struct:s_point	typeref:typename:int
fdf	src/main.c	/^void	fdf(t_map *map)$/;"	f	typeref:typename:void
fill_line	lib/libft/libft_42/get_next_line.c	/^char	*fill_line(int fd, char *raw)$/;"	f	typeref:typename:char *
fill_mtrx	.gdbinit	/^define fill_mtrx$/;"	d
fill_mtrx	src/parser.c	/^void	fill_mtrx(t_point *row, char *line, int y, t_z *z)$/;"	f	typeref:typename:void
find_max	src/range.c	/^int	find_max(char **data)$/;"	f	typeref:typename:int
find_min	src/range.c	/^int	find_min(char **data)$/;"	f	typeref:typename:int
format	lib/mlx/mlx_int.h	/^	int				format;$/;"	m	struct:s_img	typeref:typename:int
free_args	src/free_and_exit.c	/^void	free_args(char **numbers)$/;"	f	typeref:typename:void
free_array	lib/libft/libft_42/ft_split.c	/^static char	**free_array(const char **s, int a)$/;"	f	typeref:typename:char **	file:
free_map	src/free_and_exit.c	/^void	free_map(t_map *map)$/;"	f	typeref:typename:void
ft_abs	lib/libft/libft_42/ft_abs.c	/^int	ft_abs(int n)$/;"	f	typeref:typename:int
ft_atoi	lib/libft/libft_42/ft_atoi.c	/^int	ft_atoi(const char *nprt)$/;"	f	typeref:typename:int
ft_bzero	lib/libft/libft_42/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_calloc	lib/libft/libft_42/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_isalnum	lib/libft/libft_42/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	lib/libft/libft_42/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	lib/libft/libft_42/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	lib/libft/libft_42/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	lib/libft/libft_42/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	lib/libft/libft_42/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	lib/libft/libft_42/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	lib/libft/libft_42/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	lib/libft/libft_42/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	lib/libft/libft_42/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	lib/libft/libft_42/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	lib/libft/libft_42/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	lib/libft/libft_42/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	lib/libft/libft_42/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	lib/libft/libft_42/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_max	src/utils.c	/^int	ft_max(int number1, int number2)$/;"	f	typeref:typename:int
ft_memchr	lib/libft/libft_42/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	lib/libft/libft_42/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	lib/libft/libft_42/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	lib/libft/libft_42/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	lib/libft/libft_42/ft_memset.c	/^void	*ft_memset(void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_mod	src/utils.c	/^int	ft_mod(int n)$/;"	f	typeref:typename:int
ft_printf	lib/libft/libft_42/ft_printf.c	/^int	ft_printf(const char *s, ...)$/;"	f	typeref:typename:int
ft_putchar	lib/libft/libft_42/ft_putchar.c	/^int	ft_putchar(char c)$/;"	f	typeref:typename:int
ft_putchar_fd	lib/libft/libft_42/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	lib/libft/libft_42/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_puthex	lib/libft/libft_42/ft_puthex.c	/^int	ft_puthex(char str, unsigned int n)$/;"	f	typeref:typename:int
ft_puthexlong	lib/libft/libft_42/ft_putptr.c	/^int	ft_puthexlong(int long n)$/;"	f	typeref:typename:int
ft_putnbr	lib/libft/libft_42/ft_putnbr.c	/^int	ft_putnbr(int n)$/;"	f	typeref:typename:int
ft_putnbr_fd	lib/libft/libft_42/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putptr	lib/libft/libft_42/ft_putptr.c	/^int	ft_putptr(long int n)$/;"	f	typeref:typename:int
ft_putstr	lib/libft/libft_42/ft_putstr.c	/^int	ft_putstr(char *s)$/;"	f	typeref:typename:int
ft_putstr_fd	lib/libft/libft_42/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putudec	lib/libft/libft_42/ft_putudec.c	/^int	ft_putudec(unsigned int n)$/;"	f	typeref:typename:int
ft_split	lib/libft/libft_42/ft_split.c	/^char	**ft_split(char const *str, char c)$/;"	f	typeref:typename:char **
ft_strchr	lib/libft/libft_42/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strchr_gnl	lib/libft/libft_42/get_next_line_utils.c	/^char	*ft_strchr_gnl(char *txt, int c)$/;"	f	typeref:typename:char *
ft_strdup	lib/libft/libft_42/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	typeref:typename:char *
ft_striteri	lib/libft/libft_42/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	typeref:typename:void
ft_strjoin	lib/libft/libft_42/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strjoin_gnl	lib/libft/libft_42/get_next_line_utils.c	/^char	*ft_strjoin_gnl(char *txt, char *buff)$/;"	f	typeref:typename:char *
ft_strlcat	lib/libft/libft_42/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	lib/libft/libft_42/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	lib/libft/libft_42/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strlen_gnl	lib/libft/libft_42/get_next_line_utils.c	/^size_t	ft_strlen_gnl(char *s)$/;"	f	typeref:typename:size_t
ft_strmapi	lib/libft/libft_42/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncat	lib/libft/libft_42/ft_strncat.c	/^char	*ft_strncat(char *dest, char *src, unsigned int n)$/;"	f	typeref:typename:char *
ft_strncmp	lib/libft/libft_42/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	lib/libft/libft_42/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	lib/libft/libft_42/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	lib/libft/libft_42/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	lib/libft/libft_42/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	lib/libft/libft_42/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	lib/libft/libft_42/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
gc	lib/mlx/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list	typeref:typename:GC
gc	lib/mlx/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img	typeref:typename:GC
gdb	Makefile	/^gdb: all $(NAME) $(TEMP_PATH)			## Debug w\/ gdb$/;"	t
gere_mouse	lib/mlx/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f	typeref:typename:int
get_b_c	src/rgb.c	/^unsigned char	get_b_c(int trgb)$/;"	f	typeref:typename:unsigned char
get_dimensions	src/parser.c	/^int	get_dimensions(int *x, int *y, char	*file)$/;"	f	typeref:typename:int
get_g_c	src/rgb.c	/^unsigned char	get_g_c(int trgb)$/;"	f	typeref:typename:unsigned char
get_libft	Makefile	/^get_libft:$/;"	t
get_log	Makefile	/^get_log:$/;"	t
get_mlx	Makefile	/^get_mlx: $/;"	t
get_next_line	lib/libft/libft_42/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_r_c	src/rgb.c	/^unsigned char	get_r_c(int trgb)$/;"	f	typeref:typename:unsigned char
get_rest	lib/libft/libft_42/get_next_line.c	/^char	*get_rest(char *raw)$/;"	f	typeref:typename:char *
get_t_c	src/rgb.c	/^unsigned char	get_t_c(int trgb)$/;"	f	typeref:typename:unsigned char
get_xlib_include_path	lib/mlx/configure	/^get_xlib_include_path(){$/;"	f
h	inc/fdf.h	/^	int		h;$/;"	m	struct:s_map	typeref:typename:int
height	lib/mlx/mlx_int.h	/^	int				height;$/;"	m	struct:s_img	typeref:typename:int
helgrind	Makefile	/^helgrind: all $(NAME) $(TEMP_PATH)			## Debug threads w\/ helgrind$/;"	t
help	Makefile	/^help: 			## Display this help page$/;"	t
help	lib/libft/Makefile	/^help: 			## Display this help page$/;"	t
hook	lib/mlx/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list	typeref:typename:int (*)()
hooks	lib/mlx/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list	typeref:typename:t_event_list[]
icolor	inc/fdf.h	/^	int		icolor;$/;"	m	struct:s_point	typeref:typename:int
im1	lib/mlx/test/main.c	/^void    *im1;$/;"	v	typeref:typename:void *
im2	lib/mlx/test/main.c	/^void	*im2;$/;"	v	typeref:typename:void *
im3	lib/mlx/test/main.c	/^void	*im3;$/;"	v	typeref:typename:void *
im4	lib/mlx/test/main.c	/^void	*im4;$/;"	v	typeref:typename:void *
image	lib/mlx/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img	typeref:typename:XImage *
img	inc/fdf.h	/^	t_img	img; \/\/our image$/;"	m	struct:s_mlx	typeref:typename:t_img
init_hook	src/init.c	/^void	init_hook(t_mlx *win)$/;"	f	typeref:typename:void
init_map	src/init.c	/^void	init_map(t_map *map, int x, int y, t_z *z)$/;"	f	typeref:typename:void
init_win	src/init.c	/^void	init_win(t_mlx *win, t_map *map)$/;"	f	typeref:typename:void
init_zoom	src/init.c	/^void	init_zoom(t_mlx *win, t_point *p1, t_point *p2)$/;"	f	typeref:typename:void
interpolate_color	src/color.c	/^static unsigned char	interpolate_color(int icolor, int fcolor, float factor,$/;"	f	typeref:typename:unsigned char	file:
isometric_view	src/render.c	/^void	isometric_view(t_point *p, float ang)$/;"	f	typeref:typename:void
key_hook	lib/mlx/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
key_param	lib/mlx/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list	typeref:typename:void *
key_win1	lib/mlx/test/main.c	/^int	key_win1(int key,void *p)$/;"	f	typeref:typename:int
key_win2	lib/mlx/test/main.c	/^int	key_win2(int key,void *p)$/;"	f	typeref:typename:int
key_win3	lib/mlx/test/main.c	/^int	key_win3(int key,void *p)$/;"	f	typeref:typename:int
libclean	Makefile	/^libclean: fclean	## Remove libs$/;"	t
line_len	inc/fdf.h	/^	int		line_len; \/\/line of image$/;"	m	struct:s_img	typeref:typename:int
line_to_clean	lib/libft/libft_42/get_next_line.c	/^char	*line_to_clean(char *raw)$/;"	f	typeref:typename:char *
local_endian	lib/mlx/test/main.c	/^int	local_endian;$/;"	v	typeref:typename:int
log_error	lib/mlx/configure	/^log_error(){$/;"	f
log_error	lib/mlx/test/run_tests.sh	/^log_error(){$/;"	f
log_info	lib/mlx/configure	/^log_info(){$/;"	f
log_info	lib/mlx/test/run_tests.sh	/^log_info(){$/;"	f
logging	lib/mlx/configure	/^logging(){$/;"	f
logging	lib/mlx/test/run_tests.sh	/^logging(){$/;"	f
loop_hook	lib/mlx/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar	typeref:typename:int (*)()
loop_param	lib/mlx/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar	typeref:typename:void *
main	lib/mlx/configure	/^main(){$/;"	f
main	lib/mlx/test/main.c	/^int	main()$/;"	f	typeref:typename:int
main	lib/mlx/test/new_win.c	/^int main()$/;"	f	typeref:typename:int
main	lib/mlx/test/run_tests.sh	/^main(){$/;"	f
main	src/main.c	/^int	main(int ac, char **av)$/;"	f	typeref:typename:int
map	inc/fdf.h	/^	t_map	*map; \/\/our map$/;"	m	struct:s_mlx	typeref:typename:t_map *
mask	lib/mlx/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list	typeref:typename:int
massif	Makefile	/^massif: all $(TEMP_PATH)		## Run Valgrind w\/ Massif (gather profiling information)$/;"	t
mlx	lib/mlx/test/main.c	/^void	*mlx;$/;"	v	typeref:typename:void *
mlx	lib/mlx/test/new_win.c	/^void *mlx;$/;"	v	typeref:typename:void *
mlx_X_error	lib/mlx/mlx_new_image.c	/^int	mlx_X_error;$/;"	v	typeref:typename:int
mlx_clear_window	lib/mlx/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_col_name	lib/mlx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_connect	inc/fdf.h	/^	void	*mlx_connect;  \/\/pointer to mlx connection$/;"	m	struct:s_mlx	typeref:typename:void *
mlx_destroy_display	lib/mlx/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_destroy_image	lib/mlx/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f	typeref:typename:int
mlx_destroy_window	lib/mlx/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_do_key_autorepeatoff	lib/mlx/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeaton	lib/mlx/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_sync	lib/mlx/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_expose_hook	lib/mlx/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_ext_fullscreen	lib/mlx/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f	typeref:typename:int
mlx_flush_event	lib/mlx/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_get_color_value	lib/mlx/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_get_data_addr	lib/mlx/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f	typeref:typename:char *
mlx_get_screen_size	lib/mlx/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f	typeref:typename:int
mlx_hook	lib/mlx/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f	typeref:typename:int
mlx_img	inc/fdf.h	/^	void	*mlx_img; \/\/pointer to the image$/;"	m	struct:s_img	typeref:typename:void *
mlx_init	lib/mlx/mlx_init.c	/^void	*mlx_init()$/;"	f	typeref:typename:void *
mlx_int_anti_resize_win	lib/mlx/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f	typeref:typename:int
mlx_int_deal_shm	lib/mlx/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_do_nothing	lib/mlx/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f	typeref:typename:int
mlx_int_egal_img	lib/mlx/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	lib/mlx/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:int
mlx_int_get_col_name	lib/mlx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_good_color	lib/mlx/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_int_get_line	lib/mlx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_text_rgb	lib/mlx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_visual	lib/mlx/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_new_image	lib/mlx/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f	typeref:typename:void *
mlx_int_new_xshm_image	lib/mlx/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f	typeref:typename:void *
mlx_int_param_ButtonPress	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_ButtonRelease	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_Expose	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyPress	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyRelease	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_MotionNotify	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_event	lib/mlx/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v	typeref:typename:int (* ([]))()
mlx_int_param_generic	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_undef	lib/mlx/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f	typeref:typename:int
mlx_int_parse_xpm	lib/mlx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_rgb_conversion	lib/mlx/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_set_win_event_mask	lib/mlx/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_static_line	lib/mlx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_str_str	lib/mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	lib/mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_to_wordtab	lib/mlx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_wait_first_expose	lib/mlx/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f	typeref:typename:int
mlx_int_xpm_f_image	lib/mlx/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f	typeref:typename:void *
mlx_int_xpm_set_pixel	lib/mlx/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:int
mlx_key_hook	lib/mlx/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_loop	lib/mlx/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_end	lib/mlx/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_hook	lib/mlx/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_get_pos	lib/mlx/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f	typeref:typename:int
mlx_mouse_hide	lib/mlx/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_hook	lib/mlx/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_move	lib/mlx/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f	typeref:typename:int
mlx_mouse_show	lib/mlx/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_new_image	lib/mlx/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_image2	lib/mlx/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_window	lib/mlx/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f	typeref:typename:void *
mlx_pixel_put	lib/mlx/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_put_image_to_window	lib/mlx/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f	typeref:typename:int
mlx_set_font	lib/mlx/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f	typeref:typename:void
mlx_string_put	lib/mlx/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_win	inc/fdf.h	/^	void	*mlx_win; \/\/pointer to mlx window$/;"	m	struct:s_mlx	typeref:typename:void *
mlx_xpm_file_to_image	lib/mlx/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	lib/mlx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	lib/mlx/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	lib/mlx/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
more_keys	src/hooks.c	/^int	more_keys(int Key, t_mlx *mlx)$/;"	f	typeref:typename:int
mouse_hook	lib/mlx/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
mouse_param	lib/mlx/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list	typeref:typename:void *
mouse_win1	lib/mlx/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win2	lib/mlx/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win3	lib/mlx/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f	typeref:typename:int
n_len	lib/libft/libft_42/ft_itoa.c	/^static int	n_len(int n)$/;"	f	typeref:typename:int	file:
name	lib/mlx/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name	typeref:typename:char *
name	lib/mlx/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col	typeref:typename:int
next	lib/libft/libft_42/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	lib/mlx/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list *
norm	Makefile	/^norm: $(TEMP_PATH)		## Run norminette test on source files$/;"	t
norm	lib/libft/Makefile	/^norm: 		## Run norminette test$/;"	t
norm_bonus	Makefile	/^norm_bonus: 		## Run norminette test on chcker files$/;"	t
param	lib/mlx/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list	typeref:typename:void *
parse_args	lib/mlx/configure	/^parse_args(){$/;"	f
pix	lib/mlx/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img	typeref:typename:Pixmap
pixel_draw	src/display.c	/^void	pixel_draw(t_mlx *win, t_point p1, t_point p2)$/;"	f	typeref:typename:void
pixel_put	src/display.c	/^void	pixel_put(t_img *img, int x, int y, int color)$/;"	f	typeref:typename:void
private_cmap	lib/mlx/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar	typeref:typename:int
pshm_format	lib/mlx/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar	typeref:typename:int
re	Makefile	/^re: fclean all	## Purge & Recompile$/;"	t
re	lib/libft/Makefile	/^re: fclean extra	## Clean and re-compile libft$/;"	t
re	lib/libft/libft_42/Makefile	/^re: fclean$/;"	t
re	lib/mlx/Makefile	/^re	: clean all$/;"	t
re	lib/mlx/test/Makefile.mk	/^re: clean all$/;"	t
read_map	.gdbinit	/^define read_map$/;"	d
read_map	src/parser.c	/^t_map	*read_map(char *filemap, int fd)$/;"	f	typeref:typename:t_map *
render_bg	src/render.c	/^void	render_bg(t_img *img, int color)$/;"	f	typeref:typename:void
reset_map	src/hooks.c	/^void	reset_map(t_mlx *win)$/;"	f	typeref:typename:void
rgb_to_int	src/utils.c	/^int	rgb_to_int(char *color)$/;"	f	typeref:typename:int
root	lib/mlx/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar	typeref:typename:Window
s_col_name	lib/mlx/mlx_int.h	/^struct	s_col_name$/;"	s
s_event_list	lib/mlx/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_img	inc/fdf.h	/^typedef struct	s_img$/;"	s
s_img	lib/mlx/mlx_int.h	/^typedef struct	s_img$/;"	s
s_list	lib/libft/libft_42/libft.h	/^typedef struct s_list$/;"	s
s_map	inc/fdf.h	/^typedef struct	s_map$/;"	s
s_mlx	inc/fdf.h	/^typedef struct	s_mlx$/;"	s
s_point	inc/fdf.h	/^typedef struct	s_point$/;"	s
s_win_list	lib/mlx/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	lib/mlx/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	lib/mlx/mlx_int.h	/^typedef struct	s_xvar$/;"	s
s_z	inc/fdf.h	/^typedef struct  s_z$/;"	s
sanity_check	src/sanity_check.c	/^int	sanity_check(char *name)$/;"	f	typeref:typename:int
saved_mode	lib/mlx/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v	typeref:typename:RRMode
screen	lib/mlx/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar	typeref:typename:int
set_point	src/parser.c	/^void	set_point(t_point *point, char *str, int x, int y)$/;"	f	typeref:typename:void
setup_colors	src/setup.c	/^void	setup_colors(t_map *map, t_z *z)$/;"	f	typeref:typename:void
setup_window	src/setup.c	/^void	setup_window(t_mlx *win)$/;"	f	typeref:typename:void
shift_x	inc/fdf.h	/^	int		shift_x;$/;"	m	struct:s_mlx	typeref:typename:int
shift_y	inc/fdf.h	/^	int		shift_y;$/;"	m	struct:s_mlx	typeref:typename:int
shm	lib/mlx/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img	typeref:typename:XShmSegmentInfo
shm_att_pb	lib/mlx/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f	typeref:typename:int
show	lib/mlx/Makefile.mk	/^show:$/;"	t
show	lib/mlx/test/Makefile.mk	/^show:$/;"	t
show_help	lib/mlx/configure	/^show_help(){$/;"	f
sigint_handler	lib/mlx/test/run_tests.sh	/^sigint_handler(){$/;"	f
size_line	lib/mlx/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img	typeref:typename:int
sl1	lib/mlx/test/main.c	/^int	sl1;$/;"	v	typeref:typename:int
sl2	lib/mlx/test/main.c	/^int	sl2;$/;"	v	typeref:typename:int
sl3	lib/mlx/test/main.c	/^int	sl3;$/;"	v	typeref:typename:int
sl4	lib/mlx/test/main.c	/^int	sl4;$/;"	v	typeref:typename:int
strlcpy_is_not_posix	lib/mlx/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f	typeref:typename:unsigned int
t_event_list	lib/mlx/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_img	inc/fdf.h	/^}			t_img;$/;"	t	typeref:struct:s_img
t_img	lib/mlx/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_list	lib/libft/libft_42/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_map	inc/fdf.h	/^}			t_map;$/;"	t	typeref:struct:s_map
t_mlx	inc/fdf.h	/^}			t_mlx;$/;"	t	typeref:struct:s_mlx
t_point	inc/fdf.h	/^}			t_point;$/;"	t	typeref:struct:s_point
t_win_list	lib/mlx/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	lib/mlx/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	lib/mlx/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
t_z	inc/fdf.h	/^}			t_z;$/;"	t	typeref:struct:s_z
test_default_main	lib/mlx/test/run_tests.sh	/^test_default_main(){$/;"	f
to_close	src/free_and_exit.c	/^int	to_close(t_mlx *mlx)$/;"	f	typeref:typename:int
to_colorize	src/color.c	/^void	to_colorize(t_point *point, float normalized_z)$/;"	f	typeref:typename:void
to_draw	src/render.c	/^int	to_draw(t_mlx *win)$/;"	f	typeref:typename:int
to_range_z	src/range.c	/^void	to_range_z(t_z *z, char **data)$/;"	f	typeref:typename:void
to_trim	lib/libft/libft_42/ft_strtrim.c	/^static int	to_trim(char const *set, char c)$/;"	f	typeref:typename:int	file:
type	lib/mlx/mlx_int.h	/^	int				type;$/;"	m	struct:s_img	typeref:typename:int
use_xshm	lib/mlx/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar	typeref:typename:int
valgrind	Makefile	/^valgrind: all $(NAME) $(TEMP_PATH)			## Debug w\/ valgrind (memcheck)$/;"	t
vgdb	Makefile	/^vgdb: all $(NAME) $(TEMP_PATH)			## Debug w\/ valgrind (memcheck) & gdb$/;"	t
vgdb_helgrind	Makefile	/^vgdb_helgrind: all $(NAME) $(TEMP_PATH)			## Debug threads w\/ helgrind & gdb$/;"	t
vgdb_pid	Makefile	/^vgdb_pid: $(NAME) $(TEMP_PATH)$/;"	t
view	inc/fdf.h	/^	float	view;$/;"	m	struct:s_mlx	typeref:typename:float
visual	lib/mlx/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar	typeref:typename:Visual *
w	inc/fdf.h	/^	int		w;$/;"	m	struct:s_map	typeref:typename:int
width	lib/mlx/mlx_int.h	/^	int				width;$/;"	m	struct:s_img	typeref:typename:int
win1	lib/mlx/test/main.c	/^void	*win1;$/;"	v	typeref:typename:void *
win1	lib/mlx/test/new_win.c	/^void *win1;$/;"	v	typeref:typename:void *
win2	lib/mlx/test/main.c	/^void    *win2;$/;"	v	typeref:typename:void *
win2	lib/mlx/test/new_win.c	/^void *win2;$/;"	v	typeref:typename:void *
win3	lib/mlx/test/main.c	/^void    *win3;$/;"	v	typeref:typename:void *
win_count	lib/mlx/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	typeref:typename:int	file:
win_list	lib/mlx/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar	typeref:typename:t_win_list *
window	lib/mlx/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list	typeref:typename:Window
wm_delete_window	lib/mlx/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar	typeref:typename:Atom
wm_protocols	lib/mlx/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar	typeref:typename:Atom
x	inc/fdf.h	/^	float	x;$/;"	m	struct:s_point	typeref:typename:float
xpm1_x	lib/mlx/test/main.c	/^int	xpm1_x;$/;"	v	typeref:typename:int
xpm1_y	lib/mlx/test/main.c	/^int	xpm1_y;$/;"	v	typeref:typename:int
y	inc/fdf.h	/^	float	y;$/;"	m	struct:s_point	typeref:typename:float
z	inc/fdf.h	/^	int		z;	\/\/value found on (x,y)$/;"	m	struct:s_point	typeref:typename:int
z_max	inc/fdf.h	/^	int		z_max;$/;"	m	struct:s_point	typeref:typename:int
z_max	inc/fdf.h	/^	int		z_max;$/;"	m	struct:s_z	typeref:typename:int
z_min	inc/fdf.h	/^	int		z_min;$/;"	m	struct:s_point	typeref:typename:int
z_min	inc/fdf.h	/^	int		z_min;$/;"	m	struct:s_z	typeref:typename:int
z_zoom	inc/fdf.h	/^	float	z_zoom;$/;"	m	struct:s_mlx	typeref:typename:float
zoom	inc/fdf.h	/^	int		zoom; \/\/ bonus part ...$/;"	m	struct:s_mlx	typeref:typename:int
